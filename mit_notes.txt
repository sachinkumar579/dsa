Class 

A way to group together data that belongs together along with methods that are designed to manipulate that data 

why do we even care about effeciency of programs

Because data sets are getting massive . Machines are expected to run programs faster 

A poorly written program can take really long to execute despite running on a faster machine 

This measurement of performance/efficiency is independent of machine the code runs on 

Check the behavior of the program as we change the size of the input 

Express efficiency in terms of size of input 

Express the growth of the programs runtime as that input grows 

In polynomial expressions its the highest order expression that captures the complexity 

In order of growth we look at the worst case 


Types of order of growth
Constant O(1)
Linear  O(n)
Quadratic  O(n^2)
logarithmic O(logn
nlogn O(nlogn)
exponential O(a^n) 

Law of addition for O()
O(f(n)) + O(g(n)) = O(f(n)+g(n))

Example
for i in range(n)
  print('a')
for i in range(n*n)
  print('b')

is O(n)+O(n*n) = O(n+n^2) = O(n^2) due to dominant term 

Complexity growth

Class   n=10 n=100 n=1000 n=1000000
O(1)     1    1     1       1
O(logn)  1    2     3       6
O(n)     10   100   1000    1000000
O(nlogn) 10   200   3000    6000000
O(n^2)   100  10000 1000000 1000000000000
O(2^n)   1024 big number , really big number , towards Infinity 


Reference
https://www.youtube.com/watch?v=o9nW0uBqvEo
